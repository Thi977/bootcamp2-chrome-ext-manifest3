name: CI / Playwright E2E

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Permite rodar manualmente
  workflow_dispatch:

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Código
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Instalar dependências (npm ci)
        run: npm ci

      # O Playwright já deve estar instalado via npm ci, mas este comando
      # garante que o Chromium com dependências esteja no ambiente do runner.
      - name: Instalar Playwright Browsers (Chromium)
        run: npx playwright install chromium

      - name: Build da Extensão (Gera dist/ e dist/extension.zip)
        # O script build-extension.mjs é executado aqui
        run: npm run build

      - name: Rodar Testes E2E com Playwright
        # O Playwright gera a pasta playwright-report no caso de sucesso ou falha
        run: npm run test:e2e || true # O '|| true' garante que o passo não falhe o job se o teste falhar

      - name: Publicar Relatório Playwright (HTML)
        # Condição 'if: always()' garante que ele rode mesmo se o teste falhar
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Publicar Pacote da Extensão (.zip)
        uses: actions/upload-artifact@v4
        with:
          name: extension-zip
          path: dist/extension.zip

      # --- Opcional: Adicionar um passo para criar a Release (Recomendado) ---
      # Para habilitar, você precisaria criar um Personal Access Token (PAT)
      # e salvá-lo como Secret no seu repositório (ex: GITHUB_TOKEN_PAT).
